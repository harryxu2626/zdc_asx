(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72],{6450:function(t,n,o){"use strict";var e=o(8522);function isPoly(t){return t.feature&&t.feature.geometry&&t.feature.geometry.type&&-1!==["Polygon","MultiPolygon"].indexOf(t.feature.geometry.type)}var r={bassackwards:!1,pointInLayer:function(t,n,o){"number"==typeof t.lat?t=[t.lng,t.lat]:r.bassackwards&&(t=t.concat().reverse());var a=[];return n.eachLayer(function(n){(!o||!a.length)&&isPoly(n)&&e.pointInPolygon({type:"Point",coordinates:t},n.toGeoJSON().geometry)&&a.push(n)}),a}};t.exports=r},8522:function(t){!function(){var n=this.gju={};function boundingBoxAroundPolyCoords(t){for(var n=[],o=[],e=0;e<t[0].length;e++)n.push(t[0][e][1]),o.push(t[0][e][0]);return n=n.sort(function(t,n){return t-n}),o=o.sort(function(t,n){return t-n}),[[n[0],o[0]],[n[n.length-1],o[o.length-1]]]}function pnpoly(t,n,o){for(var e=[[0,0]],r=0;r<o.length;r++){for(var a=0;a<o[r].length;a++)e.push(o[r][a]);e.push(o[r][0]),e.push([0,0])}for(var i=!1,r=0,a=e.length-1;r<e.length;a=r++)e[r][0]>n!=e[a][0]>n&&t<(e[a][1]-e[r][1])*(n-e[r][0])/(e[a][0]-e[r][0])+e[r][1]&&(i=!i);return i}t.exports&&(t.exports=n),n.lineStringsIntersect=function(t,n){for(var o=[],e=0;e<=t.coordinates.length-2;++e)for(var r=0;r<=n.coordinates.length-2;++r){var a={x:t.coordinates[e][1],y:t.coordinates[e][0]},i={x:t.coordinates[e+1][1],y:t.coordinates[e+1][0]},s={x:n.coordinates[r][1],y:n.coordinates[r][0]},u={x:n.coordinates[r+1][1],y:n.coordinates[r+1][0]},l=(u.x-s.x)*(a.y-s.y)-(u.y-s.y)*(a.x-s.x),c=(i.x-a.x)*(a.y-s.y)-(i.y-a.y)*(a.x-s.x),d=(u.y-s.y)*(i.x-a.x)-(u.x-s.x)*(i.y-a.y);if(0!=d){var h=l/d,f=c/d;0<=h&&h<=1&&0<=f&&f<=1&&o.push({type:"Point",coordinates:[a.x+h*(i.x-a.x),a.y+h*(i.y-a.y)]})}}return 0==o.length&&(o=!1),o},n.pointInBoundingBox=function(t,n){return!(t.coordinates[1]<n[0][0]||t.coordinates[1]>n[1][0]||t.coordinates[0]<n[0][1]||t.coordinates[0]>n[1][1])},n.pointInPolygon=function(t,o){for(var e="Polygon"==o.type?[o.coordinates]:o.coordinates,r=!1,a=0;a<e.length;a++)n.pointInBoundingBox(t,boundingBoxAroundPolyCoords(e[a]))&&(r=!0);if(!r)return!1;for(var i=!1,a=0;a<e.length;a++)pnpoly(t.coordinates[1],t.coordinates[0],e[a])&&(i=!0);return i},n.pointInMultiPolygon=function(t,o){for(var e="MultiPolygon"==o.type?[o.coordinates]:o.coordinates,r=!1,a=!1,i=0;i<e.length;i++){for(var s=e[i],u=0;u<s.length;u++)!r&&n.pointInBoundingBox(t,boundingBoxAroundPolyCoords(s[u]))&&(r=!0);if(!r)return!1;for(var u=0;u<s.length;u++)!a&&pnpoly(t.coordinates[1],t.coordinates[0],s[u])&&(a=!0)}return a},n.numberToRadius=function(t){return t*Math.PI/180},n.numberToDegree=function(t){return 180*t/Math.PI},n.drawCircle=function(t,o,e){for(var r=[o.coordinates[1],o.coordinates[0]],a=t/1e3/6371,i=[n.numberToRadius(r[0]),n.numberToRadius(r[1])],e=e||15,s=[[r[0],r[1]]],u=0;u<e;u++){var l=2*Math.PI*u/e,c=Math.asin(Math.sin(i[0])*Math.cos(a)+Math.cos(i[0])*Math.sin(a)*Math.cos(l)),d=i[1]+Math.atan2(Math.sin(l)*Math.sin(a)*Math.cos(i[0]),Math.cos(a)-Math.sin(i[0])*Math.sin(c));s[u]=[],s[u][1]=n.numberToDegree(c),s[u][0]=n.numberToDegree(d)}return{type:"Polygon",coordinates:[s]}},n.rectangleCentroid=function(t){var n=t.coordinates[0],o=n[0][0],e=n[0][1];return{type:"Point",coordinates:[o+(n[2][0]-o)/2,e+(n[2][1]-e)/2]}},n.pointDistance=function(t,o){var e=t.coordinates[0],r=t.coordinates[1],a=o.coordinates[0],i=o.coordinates[1],s=n.numberToRadius(i-r),u=n.numberToRadius(a-e),l=Math.pow(Math.sin(s/2),2)+Math.cos(n.numberToRadius(r))*Math.cos(n.numberToRadius(i))*Math.pow(Math.sin(u/2),2);return 6371*(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)))*1e3},n.geometryWithinRadius=function(t,o,e){if("Point"==t.type)return n.pointDistance(t,o)<=e;if("LineString"==t.type||"Polygon"==t.type){var r,a={};for(var i in r="Polygon"==t.type?t.coordinates[0]:t.coordinates)if(a.coordinates=r[i],n.pointDistance(a,o)>e)return!1}return!0},n.area=function(t){for(var n,o,e=0,r=t.coordinates[0],a=r.length-1,i=0;i<r.length;a=i++){var n={x:r[i][1],y:r[i][0]},o={x:r[a][1],y:r[a][0]};e+=n.x*o.y,e-=n.y*o.x}return e/2},n.centroid=function(t){for(var o,e,r,a=0,i=0,s=t.coordinates[0],u=s.length-1,l=0;l<s.length;u=l++){var o={x:s[l][1],y:s[l][0]},e={x:s[u][1],y:s[u][0]};r=o.x*e.y-e.x*o.y,a+=(o.x+e.x)*r,i+=(o.y+e.y)*r}return{type:"Point",coordinates:[i/(r=6*n.area(t)),a/r]}},n.simplify=function(t,n){n=n||20;var o,e,r,a,i,s,u,l,c,d,h,f,g,p,y,M,x,m,v,b=Math.PI/180*.5,P=[],I=[],T=[];if((t=t.map(function(t){return{lng:t.coordinates[0],lat:t.coordinates[1]}})).length<3)return t;for(o=t.length,d=360*n/(2*Math.PI*6378137),d*=d,r=0,I[0]=0,T[0]=o-1,e=1;e>0;)if(a=I[e-1],i=T[e-1],e--,i-a>1){for(h=t[i].lng()-t[a].lng(),f=t[i].lat()-t[a].lat(),Math.abs(h)>180&&(h=360-Math.abs(h)),h*=Math.cos(b*(t[i].lat()+t[a].lat())),g=h*h+f*f,s=a+1,u=a,c=-1;s<i;s++)p=t[s].lng()-t[a].lng(),y=t[s].lat()-t[a].lat(),Math.abs(p)>180&&(p=360-Math.abs(p)),p*=Math.cos(b*(t[s].lat()+t[a].lat())),M=p*p+y*y,x=t[s].lng()-t[i].lng(),m=t[s].lat()-t[i].lat(),Math.abs(x)>180&&(x=360-Math.abs(x)),x*=Math.cos(b*(t[s].lat()+t[i].lat())),(l=M>=g+(v=x*x+m*m)?v:v>=g+M?M:(p*f-y*h)*(p*f-y*h)/g)>c&&(u=s,c=l);c<d?(P[r]=a,r++):(I[++e-1]=u,T[e-1]=i,I[++e-1]=a,T[e-1]=u)}else P[r]=a,r++;P[r]=o-1,r++;for(var w=[],s=0;s<r;s++)w.push(t[P[s]]);return w.map(function(t){return{type:"Point",coordinates:[t.lng,t.lat]}})},n.destinationPoint=function(t,o,e){e/=6371,o=n.numberToRadius(o);var r=n.numberToRadius(t.coordinates[0]),a=n.numberToRadius(t.coordinates[1]),i=Math.asin(Math.sin(a)*Math.cos(e)+Math.cos(a)*Math.sin(e)*Math.cos(o)),s=r+Math.atan2(Math.sin(o)*Math.sin(e)*Math.cos(a),Math.cos(e)-Math.sin(a)*Math.sin(i));return s=(s+3*Math.PI)%(2*Math.PI)-Math.PI,{type:"Point",coordinates:[n.numberToDegree(s),n.numberToDegree(i)]}}}()},6072:function(t,n,o){"use strict";o.r(n),o.d(n,{default:function(){return DynamicTooltips}});var e=o(5893),r=o(7294),a=o(5274),i=o(5861),s=o(5243),u=o.n(s),l=o(6450),c=o(3910);function TooltipConditional(t,n,o,e,r){if(console.log(o.name.split(" ")[1]),console.log(r.split("_")[1]),o.name.split(" ")[1]===r.split("_")[1]||"BUFFR"===o.name.split(" ")[0]){var a,i,s=l.pointInLayer(n,u().geoJson(o));if(s.length&&e){let n=Object.entries(null===(a=s[0])||void 0===a?void 0:a.feature.properties).filter(t=>{let[n,o]=t;return null!==o&&"fid"!==n})[0][0].split(" ").reverse()[0],e=s[0]?{sector:o.name,lowAltitude:"SFC"===n?0:Number(n),highAltitude:Number(Object.entries(null===(i=s[0])||void 0===i?void 0:i.feature.properties).filter(t=>{let[n,o]=t;return null!==o&&"fid"!==n})[0][0].split(" ").reverse()[1])}:"",r=t.findIndex(t=>t.sector===o.name);-1===r?t.push(e):t[r]=e}else{let n=t.findIndex(t=>t.sector===o.name);n>-1&&t.splice(n,1)}}}var DynamicTooltips=t=>{let n=(0,a.Sx)(),[o,s]=(0,r.useState)({}),[u,l]=(0,r.useState)([]);(0,r.useEffect)(()=>{n&&n.addEventListener("mousemove",t=>{s({lat:t.latlng.lat,lng:t.latlng.lng})})},[n]);let{lat:d,lng:h}=o;return(0,r.useEffect)(()=>{if(d){for(let n in c.Z)TooltipConditional(u,[h,d],c.Z[n],t.sectors["show"+n.substring(0,5).toUpperCase()],t.region);console.log(u)}},[d]),u.sort((t,n)=>n.lowAltitude-t.lowAltitude),(0,e.jsx)(e.Fragment,{children:d&&(0,e.jsx)("div",{style:{display:"flex",flexDirection:"column",minWidth:"1vw",maxWidth:"250px",minHeight:"1vw",position:"fixed",right:0,top:0,backgroundColor:"#272727",color:"#fff",zIndex:800,borderRadius:"10px",margin:"1rem",padding:"1rem"},children:u.map(t=>(0,e.jsxs)(i.Z,{children:[t.sector,": ",0===t.lowAltitude?"SFC":t.lowAltitude," ",t.highAltitude?t.highAltitude:""]},t.sector))})})}},5274:function(t,n,o){"use strict";o.d(n,{Sx:function(){return useMap}});var e=o(1410);function useMap(){return(0,e.mE)().map}o(7294)}}]);